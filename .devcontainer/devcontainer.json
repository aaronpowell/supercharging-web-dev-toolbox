// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.179.0/containers/docker-from-docker-compose
{
  "name": "Docker from Docker Compose",
  "dockerComposeFile": "docker-compose.yml",
  "service": "app",
  "workspaceFolder": "/workspace",

  // Use this environment variable if you need to bind mount your local source code into a new container.
  "remoteEnv": {
    "LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}"
  },

  // Set *default* container specific settings.json values on container create.
  "settings": {
    "terminal.integrated.shell.linux": "/bin/bash"
  },

  // Add the IDs of extensions you want installed when the container is created.
  "extensions": [
    "ms-azuretools.vscode-azurefunctions",
    "ms-azuretools.vscode-azurestaticwebapps",
    "dbaeumer.vscode-eslint",
    "apollographql.vscode-apollo",
    "esbenp.prettier-vscode",
    "ms-vsliveshare.vsliveshare-pack",
    "visualstudioexptteam.vscodeintellicode",
    "editorconfig.editorconfig",
    "msjsdiag.debugger-for-edge",
    "ms-edgedevtools.vscode-edge-devtools"
  ],

  // Use 'postCreateCommand' to run commands after the container is created.
  "postCreateCommand": ". ${NVM_DIR}/nvm.sh && nvm install && npm install && cd api && npm install",

  // Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
  "remoteUser": "vscode",

  "forwardPorts": [4280, 8081, 10251, 10253, 10254]
}
